external_components:
  - source:
      type: local
      path: ../components

esphome:
  name: retro-radio
  friendly_name: Retro Radio Bridge

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:

api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

uart:
  id: radio_bus
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 115200

radio_controller:
  id: bridge
  uart_id: radio_bus

select:
  - platform: template
    name: "Radio Mode"
    options:
      - "radio"
      - "playlist"
      - "clock"
      - "animation"
    set_action:
      - lambda: |-
          id(bridge).set_mode_from_name(x.c_str());

switch:
  - platform: template
    name: "Preset 1 â€“ Jazz"
    turn_on_action:
      - lambda: |-
          id(bridge).set_mode_with_preset("radio", 1);

number:
  - platform: template
    name: "Radio Volume"
    min_value: 0
    max_value: 255
    step: 1
    set_action:
      - lambda: |-
          id(bridge).set_volume((uint8_t) x);

text_sensor:
  - platform: homeassistant
    entity_id: sensor.radio_metadata
    id: ha_metadata

interval:
  - interval: 1s
    then:
      - lambda: |-
          // TODO: forward metadata to firmware/display


