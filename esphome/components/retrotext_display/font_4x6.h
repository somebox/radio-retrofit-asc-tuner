/**
 * Modern 4x6 Font for ESPHome
 * 
 * Based on https://github.com/filmote/Font4x6/
 * Rotated from 90¬∞ clockwise to normal orientation
 * Hand-tweaking of some letters, spacing and punctuation
 * Full ASCII 32-126 range with blanks for missing characters
 */
#pragma once

#include <cstdint>

namespace esphome {
namespace retrotext_display {

// Font stored in flash (const)
static const uint8_t modern_font4x6[] = {
4,6,32,
// 32 - [ ] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 33 - [!]
0b01000000,
0b01000000,
0b01000000,
0b01000000,
0b00000000,
0b01000000,
// 34 - ["] (not available)
0b00000000,
0b01010000,
0b01010000,
0b00000000,
0b00000000,
0b00000000,
// 35 - [#] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 36 - [$] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 37 - [%] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 38 - [&] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 39 - ['] (not available)
0b00000000,
0b01000000,
0b01000000,
0b00000000,
0b00000000,
0b00000000,
// 40 - [(] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 41 - [)] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 42 - [*] (not available)
0b00000000,
0b01000000,
0b11100000,
0b01000000,
0b00000000,
0b00000000,
// 43 - [+] (not available)
0b00000000,
0b00000000,
0b01000000,
0b11100000,
0b01000000,
0b00000000,
// 44 - [,] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b01000000,
0b10000000,
// 45 - [-] (not available)
0b00000000,
0b00000000,
0b00000000,
0b11100000,
0b00000000,
0b00000000,
// 46 - [.]
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b01000000,
// 47 - [/] (not available)
0b00010000,
0b00010000,
0b00100000,
0b01000000,
0b10000000,
0b10000000,
// 48 - [0]
0b01100000,
0b10010000,
0b10110000,
0b11010000,
0b10010000,
0b01100000,
// 49 - [1]
0b01000000,
0b11000000,
0b01000000,
0b01000000,
0b01000000,
0b11100000,
// 50 - [2]
0b01100000,
0b10010000,
0b00010000,
0b01100000,
0b10000000,
0b11110000,
// 51 - [3]
0b01100000,
0b10010000,
0b00100000,
0b00010000,
0b10010000,
0b01100000,
// 52 - [4]
0b00100000,
0b01100000,
0b10100000,
0b11110000,
0b00100000,
0b00100000,
// 53 - [5]
0b11110000,
0b10000000,
0b11100000,
0b00010000,
0b10010000,
0b01100000,
// 54 - [6]
0b01100000,
0b10000000,
0b11100000,
0b10010000,
0b10010000,
0b01100000,
// 55 - [7]
0b11110000,
0b00010000,
0b00100000,
0b01000000,
0b01000000,
0b01000000,
// 56 - [8]
0b01100000,
0b10010000,
0b01100000,
0b10010000,
0b10010000,
0b01100000,
// 57 - [9]
0b01100000,
0b10010000,
0b10010000,
0b01110000,
0b00010000,
0b01100000,
// 58 - [:] (not available)
0b00000000,
0b00000000,
0b01000000,
0b0000000,
0b01000000,
0b00000000,
// 59 - [;] (not available)
0b00000000,
0b00000000,
0b01000000,
0b00000000,
0b01000000,
0b10000000,
// 60 - [<] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 61 - [=] (not available)
0b00000000,
0b00000000,
0b11100000,
0b00000000,
0b11100000,
0b00000000,
// 62 - [>] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 63 - [?] (not available)
0b01100000,
0b10010000,
0b00010000,
0b00100000,
0b00000000,
0b00100000,
// 64 - [@] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 65 - [A]
0b01100000,
0b10010000,
0b10010000,
0b11110000,
0b10010000,
0b10010000,
// 66 - [B]
0b11100000,
0b10010000,
0b11100000,
0b10010000,
0b10010000,
0b11100000,
// 67 - [C]
0b01100000,
0b10010000,
0b10000000,
0b10000000,
0b10010000,
0b01100000,
// 68 - [D]
0b11100000,
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b11100000,
// 69 - [E]
0b11110000,
0b10000000,
0b11100000,
0b10000000,
0b10000000,
0b11110000,
// 70 - [F]
0b11110000,
0b10000000,
0b11100000,
0b10000000,
0b10000000,
0b10000000,
// 71 - [G]
0b01100000,
0b10010000,
0b10000000,
0b10110000,
0b10010000,
0b01110000,
// 72 - [H]
0b10010000,
0b10010000,
0b11110000,
0b10010000,
0b10010000,
0b10010000,
// 73 - [I]
0b11100000,
0b01000000,
0b01000000,
0b01000000,
0b01000000,
0b11100000,
// 74 - [J]
0b01110000,
0b00010000,
0b00010000,
0b00010000,
0b10010000,
0b01100000,
// 75 - [K]
0b10010000,
0b10100000,
0b11000000,
0b10100000,
0b10010000,
0b10010000,
// 76 - [L]
0b10000000,
0b10000000,
0b10000000,
0b10000000,
0b10000000,
0b11110000,
// 77 - [M]
0b10010000,
0b11110000,
0b10010000,
0b10010000,
0b10010000,
0b10010000,
// 78 - [N]
0b10010000,
0b11010000,
0b10110000,
0b10010000,
0b10010000,
0b10010000,
// 79 - [O]
0b01100000,
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b01100000,
// 80 - [P]
0b11100000,
0b10010000,
0b10010000,
0b11100000,
0b10000000,
0b10000000,
// 81 - [Q]
0b01100000,
0b10010000,
0b10010000,
0b10010000,
0b10100000,
0b01010000,
// 82 - [R]
0b11100000,
0b10010000,
0b10010000,
0b11100000,
0b10010000,
0b10010000,
// 83 - [S]
0b01110000,
0b10000000,
0b01100000,
0b00010000,
0b00010000,
0b11100000,
// 84 - [T]
0b11110000,
0b01000000,
0b01000000,
0b01000000,
0b01000000,
0b01000000,
// 85 - [U]
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b01100000,
// 86 - [V]
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b01010000,
0b00100000,
// 87 - [W]
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b11110000,
0b10010000,
// 88 - [X]
0b10010000,
0b10010000,
0b01100000,
0b10010000,
0b10010000,
0b10010000,
// 89 - [Y]
0b10010000,
0b10010000,
0b01010000,
0b00100000,
0b00100000,
0b00100000,
// 90 - [Z]
0b11110000,
0b00100000,
0b01000000,
0b01000000,
0b10000000,
0b11110000,
// 91 - [[] (not available)
0b11100000,
0b10000000,
0b10000000,
0b10000000,
0b10000000,
0b11100000,
// 92 - [\] (not available)
0b10000000,
0b10000000,
0b01000000,
0b00100000,
0b00010000,
0b00010000,
// 93 - []] (not available)
0b11100000,
0b00100000,
0b00100000,
0b00100000,
0b00100000,
0b11100000,
// 94 - [^] (not available)
0b01000000,
0b10100000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 95 - [_] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b11110000,
// 96 - [`] (not available)
0b00000000,
0b01000000,
0b00100000,
0b00000000,
0b00000000,
0b00000000,
// 97 - [a]
0b00000000,
0b01100000,
0b00010000,
0b01110000,
0b10010000,
0b01110000,
// 98 - [b]
0b10000000,
0b10000000,
0b11100000,
0b10010000,
0b10010000,
0b11100000,
// 99 - [c]
0b00000000,
0b01100000,
0b10010000,
0b10000000,
0b10010000,
0b01100000,
// 100 - [d]
0b00010000,
0b01110000,
0b10010000,
0b10010000,
0b10010000,
0b01110000,
// 101 - [e]
0b00000000,
0b01100000,
0b10010000,
0b11110000,
0b10000000,
0b01110000,
// 102 - [f]
0b00100000,
0b01000000,
0b11100000,
0b01000000,
0b01000000,
0b01000000,
// 103 - [g]
0b00000000,
0b01110000,
0b10010000,
0b01110000,
0b00010000,
0b11100000,
// 104 - [h]
0b10000000,
0b11100000,
0b10010000,
0b10010000,
0b10010000,
0b10010000,
// 105 - [i]
0b00100000,
0b00000000,
0b01100000,
0b00100000,
0b00100000,
0b01110000,
// 106 - [j]
0b00000000,
0b00110000,
0b00010000,
0b00010000,
0b00010000,
0b11100000,
// 107 - [k]
0b10000000,
0b10010000,
0b10100000,
0b11000000,
0b10100000,
0b10010000,
// 108 - [l]
0b01100000,
0b00100000,
0b00100000,
0b00100000,
0b00100000,
0b01110000,
// 109 - [m]
0b00000000,
0b10010000,
0b11110000,
0b10010000,
0b10010000,
0b10010000,
// 110 - [n]
0b00000000,
0b10100000,
0b11010000,
0b10010000,
0b10010000,
0b10010000,
// 111 - [o]
0b00000000,
0b01100000,
0b10010000,
0b10010000,
0b10010000,
0b01100000,
// 112 - [p]
0b00000000,
0b11100000,
0b10010000,
0b10010000,
0b11100000,
0b10000000,
// 113 - [q]
0b00000000,
0b01110000,
0b10010000,
0b10010000,
0b01110000,
0b00010000,
// 114 - [r]
0b00000000,
0b10100000,
0b11010000,
0b10000000,
0b10000000,
0b10000000,
// 115 - [s]
0b00000000,
0b01110000,
0b10000000,
0b01100000,
0b00010000,
0b11100000,
// 116 - [t]
0b01000000,
0b11100000,
0b01000000,
0b01000000,
0b01000000,
0b00110000,
// 117 - [u]
0b00000000,
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b01100000,
// 118 - [v]
0b00000000,
0b10010000,
0b10010000,
0b10010000,
0b01010000,
0b00100000,
// 119 - [w]
0b00000000,
0b10010000,
0b10010000,
0b10010000,
0b11110000,
0b10010000,
// 120 - [x]
0b00000000,
0b10010000,
0b10010000,
0b01100000,
0b10010000,
0b10010000,
// 121 - [y]
0b00000000,
0b10010000,
0b10010000,
0b01110000,
0b00010000,
0b11100000,
// 122 - [z]
0b00000000,
0b11110000,
0b00100000,
0b01000000,
0b10000000,
0b11110000,
// 123 - [{] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 124 - [|]
0b01000000,
0b01000000,
0b01000000,
0b01000000,
0b01000000,
0b01000000,
// 125 - [}] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 126 - [~] (not available)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// 127 - (unused)
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
// === EXTENDED CHARACTER SET (128-159) ===
// Media control icons
// 128 - [‚ñ∂] Play icon
0b01000000,
0b01100000,
0b01110000,
0b01110000,
0b01100000,
0b01000000,
// 129 - [‚èπ] Stop icon
0b00000000,
0b11110000,
0b11110000,
0b11110000,
0b11110000,
0b00000000,
// 130 - [‚è∏] Pause icon
0b00000000,
0b11011000,
0b11011000,
0b11011000,
0b11011000,
0b00000000,
// 131 - [‚è≠] Next/Skip icon
0b10100000,
0b11100000,
0b11110000,
0b11110000,
0b11100000,
0b10100000,
// 132 - [‚èÆ] Previous icon
0b01010000,
0b01110000,
0b11110000,
0b11110000,
0b01110000,
0b01010000,
// 133 - [üîÄ] Shuffle icon (crossed arrows)
0b10010000,
0b01100000,
0b00110000,
0b01100000,
0b10010000,
0b00000000,
// 134 - [üîÅ] Repeat icon (circular arrow)
0b01100000,
0b10010000,
0b00010000,
0b10000000,
0b10010000,
0b01100000,
// 135 - [‚ô•] Heart icon
0b00000000,
0b01010000,
0b11110000,
0b11110000,
0b01100000,
0b00000000,
// 136 - [‚ô™] Music note
0b00100000,
0b00100000,
0b00100000,
0b01110000,
0b11100000,
0b01100000,
// 137 - [üìª] Radio/Antenna icon
0b01000000,
0b10100000,
0b01000000,
0b11110000,
0b10010000,
0b11110000,
// 138 - [‚è∫] Record icon (filled circle)
0b00000000,
0b01100000,
0b11110000,
0b11110000,
0b01100000,
0b00000000,
// 139 - [‚Üª] Refresh/Reload icon
0b01100000,
0b10000000,
0b11100000,
0b00010000,
0b01100000,
0b00000000,
// Lowercase accented characters (compact variants)
// 140 - [√°/√†/√¢/√£/√§/√•] - a with dot above
0b01000000,
0b01100000,
0b00010000,
0b01110000,
0b10010000,
0b01110000,
// 141 - [√©/√®/√™/√´] - e with dot above
0b01000000,
0b01100000,
0b10010000,
0b11110000,
0b10000000,
0b01110000,
// 142 - [√≠/√¨/√Æ/√Ø] - i with emphasis (already has dot, make taller)
0b01000000,
0b00000000,
0b01100000,
0b00100000,
0b00100000,
0b01110000,
// 143 - [√≥/√≤/√¥/√µ/√∂] - o with dot above
0b01000000,
0b01100000,
0b10010000,
0b10010000,
0b10010000,
0b01100000,
// 144 - [√∫/√π/√ª/√º] - u with dot above
0b01000000,
0b10010000,
0b10010000,
0b10010000,
0b10010000,
0b01100000,
// 145 - [√±] - n with tilde
0b01010000,
0b10100000,
0b11010000,
0b10010000,
0b10010000,
0b10010000,
// 146 - [√ß] - c with cedilla
0b00000000,
0b01100000,
0b10010000,
0b10000000,
0b10010000,
0b01100000,
0b01000000,  // Note: 7 rows for descender
// 147 - [√ø] - y with dots
0b01010000,
0b10010000,
0b10010000,
0b01110000,
0b00010000,
0b11100000,
// 148 - [√∏] - o with slash
0b00000000,
0b01100000,
0b10110000,
0b11010000,
0b10010000,
0b01100000,
// 149 - [√¶] - ae ligature
0b00000000,
0b01110000,
0b10010000,
0b11110000,
0b10000000,
0b01110000,
// 150 - [≈ì] - oe ligature
0b00000000,
0b01110000,
0b10110000,
0b11110000,
0b10100000,
0b01110000,
// 151 - [√ü] - German sharp s
0b01100000,
0b10010000,
0b10100000,
0b10010000,
0b10010000,
0b10100000,
// 152 - [¬ø] - Inverted question mark
0b00100000,
0b00000000,
0b00100000,
0b01000000,
0b10010000,
0b01100000,
// 153 - [¬°] - Inverted exclamation
0b01000000,
0b00000000,
0b01000000,
0b01000000,
0b01000000,
0b01000000,
// 154 - [¬∞] - Degree symbol
0b01100000,
0b10010000,
0b01100000,
0b00000000,
0b00000000,
0b00000000,
// 155-159 - Reserved for future use
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
0b00000000,
};

/**
 * UTF-8 Character Mapper
 * Maps UTF-8 characters to our extended glyph set
 * Returns glyph index (0-159) or 0 for unsupported characters
 */
inline uint8_t map_utf8_to_glyph(const char* str, size_t& bytes_consumed) {
  bytes_consumed = 1;
  uint8_t c = (uint8_t)str[0];
  
  // ASCII range (0-127) - direct mapping
  if (c < 128) {
    return c;
  }
  
  // Extended ASCII range (128-159) - direct mapping to custom glyphs
  // These are our custom media icons and international characters
  if (c >= 128 && c <= 159) {
    return c;
  }
  
  // UTF-8 multi-byte sequences
  // Format: 110xxxxx 10xxxxxx (2 bytes) or 1110xxxx 10xxxxxx 10xxxxxx (3 bytes)
  
  // 2-byte UTF-8 sequence
  if ((c & 0xE0) == 0xC0 && str[1] != '\0') {
    bytes_consumed = 2;
    uint16_t codepoint = ((c & 0x1F) << 6) | ((uint8_t)str[1] & 0x3F);
    
    // Latin-1 Supplement and Latin Extended-A (U+0080 to U+017F)
    switch (codepoint) {
      // Lowercase a variants ‚Üí 140 (a with dot)
      case 0x00E0: // √†
      case 0x00E1: // √°
      case 0x00E2: // √¢
      case 0x00E3: // √£
      case 0x00E4: // √§
      case 0x00E5: // √•
      case 0x0101: // ƒÅ
      case 0x0103: // ƒÉ
      case 0x0105: // ƒÖ
        return 140;
      
      // Lowercase e variants ‚Üí 141 (e with dot)
      case 0x00E8: // √®
      case 0x00E9: // √©
      case 0x00EA: // √™
      case 0x00EB: // √´
      case 0x0113: // ƒì
      case 0x0115: // ƒï
      case 0x0117: // ƒó
      case 0x0119: // ƒô
      case 0x011B: // ƒõ
        return 141;
      
      // Lowercase i variants ‚Üí 142 (i with emphasis)
      case 0x00EC: // √¨
      case 0x00ED: // √≠
      case 0x00EE: // √Æ
      case 0x00EF: // √Ø
      case 0x0129: // ƒ©
      case 0x012B: // ƒ´
      case 0x012D: // ƒ≠
      case 0x012F: // ƒØ
      case 0x0131: // ƒ± (dotless i) - just map to regular i
        return 142;
      
      // Lowercase o variants ‚Üí 143 (o with dot)
      case 0x00F2: // √≤
      case 0x00F3: // √≥
      case 0x00F4: // √¥
      case 0x00F5: // √µ
      case 0x00F6: // √∂
      case 0x014D: // ≈ç
      case 0x014F: // ≈è
      case 0x0151: // ≈ë
        return 143;
      
      // Lowercase u variants ‚Üí 144 (u with dot)
      case 0x00F9: // √π
      case 0x00FA: // √∫
      case 0x00FB: // √ª
      case 0x00FC: // √º
      case 0x0169: // ≈©
      case 0x016B: // ≈´
      case 0x016D: // ≈≠
      case 0x016F: // ≈Ø
      case 0x0171: // ≈±
      case 0x0173: // ≈≥
        return 144;
      
      // Lowercase n with tilde ‚Üí 145
      case 0x00F1: // √±
      case 0x0144: // ≈Ñ
      case 0x0148: // ≈à
        return 145;
      
      // c with cedilla ‚Üí 146
      case 0x00E7: // √ß
      case 0x0107: // ƒá
      case 0x0109: // ƒâ
      case 0x010B: // ƒã
      case 0x010D: // ƒç
        return 146;
      
      // y variants ‚Üí 147
      case 0x00FD: // √Ω
      case 0x00FF: // √ø
      case 0x0177: // ≈∑
        return 147;
      
      // o with slash ‚Üí 148
      case 0x00F8: // √∏
        return 148;
      
      // ae ligature ‚Üí 149
      case 0x00E6: // √¶
        return 149;
      
      // oe ligature ‚Üí 150
      case 0x0153: // ≈ì
        return 150;
      
      // German sharp s ‚Üí 151
      case 0x00DF: // √ü
        return 151;
      
      // Inverted punctuation
      case 0x00BF: // ¬ø
        return 152;
      case 0x00A1: // ¬°
        return 153;
      
      // Degree symbol
      case 0x00B0: // ¬∞
        return 154;
      
      // UPPERCASE accented letters ‚Üí map to plain ASCII uppercase
      case 0x00C0: case 0x00C1: case 0x00C2: case 0x00C3: case 0x00C4: case 0x00C5: // √Ä-√Ö
        return 'A';
      case 0x00C8: case 0x00C9: case 0x00CA: case 0x00CB: // √à-√ã
        return 'E';
      case 0x00CC: case 0x00CD: case 0x00CE: case 0x00CF: // √å-√è
        return 'I';
      case 0x00D2: case 0x00D3: case 0x00D4: case 0x00D5: case 0x00D6: case 0x00D8: // √í-√ñ, √ò
        return 'O';
      case 0x00D9: case 0x00DA: case 0x00DB: case 0x00DC: // √ô-√ú
        return 'U';
      case 0x00D1: // √ë
        return 'N';
      case 0x00C7: // √á
        return 'C';
      case 0x00DD: // √ù
        return 'Y';
    }
  }
  
  // 3-byte UTF-8 sequence (for symbols like ‚ñ∂, ‚ô™, etc.)
  if ((c & 0xF0) == 0xE0 && str[1] != '\0' && str[2] != '\0') {
    bytes_consumed = 3;
    uint16_t codepoint = ((c & 0x0F) << 12) | (((uint8_t)str[1] & 0x3F) << 6) | ((uint8_t)str[2] & 0x3F);
    
    // Media control symbols (if user types them directly)
    switch (codepoint) {
      case 0x25B6: // ‚ñ∂ Play
        return 128;
      case 0x23F9: // ‚èπ Stop
        return 129;
      case 0x23F8: // ‚è∏ Pause
        return 130;
      case 0x23ED: // ‚è≠ Next
        return 131;
      case 0x23EE: // ‚èÆ Previous
        return 132;
      case 0x2665: // ‚ô• Heart
        return 135;
      case 0x266A: // ‚ô™ Music note
      case 0x266B: // ‚ô´ Double music note
        return 136;
    }
  }
  
  // Unsupported character - return space
  return ' ';
}

}  // namespace retrotext_display
}  // namespace esphome